# 通用型AI助手依赖清单
# Universal AI Assistant Dependencies

# 核心框架依赖
openai>=1.65.2                 # OpenAI API客户端
rich>=13.9.4                   # 富文本终端输出
pydantic>=2.10.6               # 数据验证和设置管理
python-dateutil>=2.9.0         # 日期时间处理
PyYAML>=6.0.2                  # YAML配置文件解析

# Web界面依赖
streamlit>=1.44.1              # Web界面框架
streamlit-agraph>=0.0.45       # 图形组件支持

# 多模态处理依赖
Pillow>=10.0.1                 # 图像处理
opencv-python>=4.8.1           # 计算机视觉库
numpy>=2.2.4                   # 数值计算

# OCR文字识别 (可选)
pytesseract>=0.3.10            # OCR文字识别引擎

# 语音处理 (可选)
SpeechRecognition>=3.10.0      # 语音识别
pyttsx3>=2.90                  # 文字转语音
pyaudio>=0.2.11               # 音频处理

# 数据处理和分析
pandas>=2.2.3                 # 数据分析
plotly>=6.0.1                 # 交互式图表

# 网络请求
requests>=2.32.3              # HTTP请求库
httpx>=0.28.1                 # 异步HTTP客户端

# 工具库
click>=8.1.8                  # 命令行界面创建
python-dotenv>=1.0.1          # 环境变量加载
readchar>=4.2.1               # 字符读取
tenacity>=9.1.2               # 重试机制

# 代码质量和检查
mypy>=1.15.0                  # 静态类型检查
pylint>=3.3.6                # 代码质量检查
isort>=6.0.1                  # 导入排序
black>=24.0.0                 # 代码格式化

# 配置和日志
toml>=0.10.2                  # TOML配置文件解析
tomlkit>=0.13.2               # TOML文件操作

# 异步编程
asyncio                       # 异步编程 (Python标准库)
typing_extensions>=4.12.2     # 类型提示扩展

# Web相关
Jinja2>=3.1.6                # 模板引擎
MarkupSafe>=3.0.2             # XML/HTML/XHTML标记安全字符串

# 其他工具
regex>=2024.11.6              # 正则表达式增强
six>=1.17.0                   # Python 2/3兼容库
urllib3>=2.3.0                # HTTP库

# 开发和测试 (可选)
pytest>=7.0.0                # 测试框架
pytest-asyncio>=0.21.0       # 异步测试支持
coverage>=7.0.0               # 代码覆盖率

# 部署相关 (可选)
gunicorn>=21.0.0              # WSGI HTTP服务器
uvicorn>=0.24.0               # ASGI服务器

# 文档生成 (可选)
sphinx>=7.0.0                # 文档生成
sphinx-rtd-theme>=1.3.0      # 文档主题

# 注意事项:
# 1. pytesseract 需要额外安装 Tesseract OCR 引擎
# 2. pyaudio 在某些系统上可能需要额外的系统依赖
# 3. 语音相关功能为可选功能，安装失败不影响核心功能
# 4. 建议使用虚拟环境安装依赖

# 安装指南:
# pip install -r requirements.txt
#
# 如果遇到某些包安装失败，可以单独安装：
# pip install --no-deps package_name
#
# 对于语音功能，如果安装失败可以跳过：
# pip install -r requirements.txt --ignore-install-errors